<Project DefaultTargets="Build">
  <PropertyGroup>
    <XamarinAndroid>$(MSBuildThisFileDirectory)bin\xamarin-android\</XamarinAndroid>
    <_MSBuildExe Condition=" '$(OS)' == 'Windows_NT' ">$(MSBuildBinPath)\MSBuild.exe</_MSBuildExe>
    <_MSBuildExe Condition=" '$(OS)' != 'Windows_NT' ">msbuild</_MSBuildExe>
  </PropertyGroup>
  <Target Name="Bootstrap">
    <MSBuild Projects="Xamarin.Android.Lite.sln" Targets="Restore" />
    <MSBuild Projects="Bootstrap\Bootstrap.csproj" Targets="Bootstrap" />
    <!--Run this in a new process, we might have bootstrapped mono-->
    <Exec Command="&quot;$(_MSBuildExe)&quot; Xamarin.Android.Lite.Tasks\Xamarin.Android.Lite.Tasks.csproj /t:Build /bl:bootstrap.binlog" />
  </Target>
  <Target Name="Build">
    <MSBuild Projects="Xamarin.Android.Lite\Xamarin.Android.Lite.csproj" Targets="SignAndroidPackage" Properties="Configuration=Debug" />
    <MSBuild Projects="Xamarin.Android.Lite\Xamarin.Android.Lite.csproj" Targets="SignAndroidPackage" Properties="Configuration=Release" />
    <MSBuild Projects="Xamarin.Android.Lite.Tasks\Xamarin.Android.Lite.Tasks.csproj" Targets="Rebuild" />
    <MSBuild Projects="Xamarin.Android.Lite.Tests\Xamarin.Android.Lite.Tests.csproj" Targets="Build" />
    <MSBuild Projects="Xamarin.Android.Lite.Tasks\Xamarin.Android.Lite.Tasks.csproj" Targets="Pack" Properties="Configuration=Release" />
    <Exec Command="&quot;$(_MSBuildExe)&quot; Xamarin.Android.Lite.Sample\Xamarin.Android.Lite.Sample.csproj /t:SignAndroidPackage /bl:sample.binlog" />
  </Target>
  <Target Name="Publish">
    <Error Text="Please supply `/p:NuGetPackage` !" Condition=" '$(NuGetPackage)' == '' " />
    <Error Text=".nugetapikey does not exist!" Condition=" !Exists('.nugetapikey') " />
    <ReadLinesFromFile File=".nugetapikey">
      <Output PropertyName="_ApiKey" TaskParameter="Lines" />
    </ReadLinesFromFile>
    <Exec Command=".nuget\NuGet.exe push &quot;$(NuGetPackage)&quot; $(_ApiKey) -Source https://api.nuget.org/v3/index.json" />
  </Target>
</Project>